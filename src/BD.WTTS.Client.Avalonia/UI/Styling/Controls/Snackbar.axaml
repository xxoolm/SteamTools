<Styles
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:spp="https://steampp.net/ui"
    xmlns:ui="using:FluentAvalonia.UI.Controls"
    xmlns:uip="using:FluentAvalonia.UI.Controls.Primitives"
    x:CompileBindings="True">

    <Design.PreviewWith>
        <Border Padding="40">
            <StackPanel MaxWidth="500" Spacing="10">
                <spp:Snackbar
                    Title="Title1"
                    IsClosable="True"
                    IsIconVisible="True"
                    IsOpen="True"
                    Message="Message" />
                <spp:Snackbar
                    Title="Title"
                    IsClosable="False"
                    IsIconVisible="True"
                    IsOpen="True"
                    Message="MessageMessageMessageMessageMessageMessageMessageMessage" />
                <spp:Snackbar
                    Title="Title"
                    IsClosable="True"
                    IsIconVisible="False"
                    IsOpen="True"
                    Message="Message" />

                <Border Height="1" Background="Black" />

                <spp:Snackbar
                    Title="Title"
                    IsOpen="True"
                    Message="Message"
                    Severity="Informational" />
                <spp:Snackbar
                    Title="Title"
                    IsOpen="True"
                    Message="MessageMessageMessageMessageMessageMessageMessageMessage"
                    Severity="Warning" />
                <spp:Snackbar
                    Title="Title"
                    IsOpen="True"
                    Message="Message"
                    Severity="Error" />
                <spp:Snackbar
                    Title="Title"
                    IsOpen="True"
                    Message="Message"
                    Severity="Success" />

                <spp:Snackbar
                    Title="Title"
                    Background="DarkSlateBlue"
                    Foreground="Red"
                    IsOpen="True"
                    Message="Message"
                    Severity="Success" />

                <spp:Snackbar
                    Title="Custom Icon"
                    IsOpen="True"
                    Message="akls;df">
                    <spp:Snackbar.IconSource>
                        <ui:SymbolIconSource Symbol="Add" />
                    </spp:Snackbar.IconSource>
                </spp:Snackbar>

                <spp:Snackbar
                    Title="Title"
                    IsOpen="True"
                    Message="Action Button">
                    <spp:Snackbar.ActionButton>
                        <Button Content="Click" />
                    </spp:Snackbar.ActionButton>
                </spp:Snackbar>

                <spp:Snackbar
                    Title="Title"
                    IsOpen="True"
                    Message="asdf">
                    <CheckBox Content="Custom Content" />
                </spp:Snackbar>

            </StackPanel>
        </Border>
    </Design.PreviewWith>

    <Styles.Resources>
        <ControlTheme x:Key="{x:Type spp:Snackbar}" TargetType="spp:Snackbar">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
            <Setter Property="Template">
                <ControlTemplate>
                    <LayoutTransformControl Name="PART_LayoutTransformControl" UseRenderTransform="True">
                        <Border
                            Name="ContentRoot"
                            VerticalAlignment="Top"
                            BorderBrush="{DynamicResource InfoBarBorderBrush}"
                            BorderThickness="{DynamicResource InfoBarBorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">

                            <!--
                                Background is used here so that it overrides the severity status color if set.
                                Padding="{StaticResource InfoBarContentRootPadding}" applied as margin on grid b/c no Padding
                            -->
                            <Panel>
                                <!--  use separate border for Background b/c no margin  -->
                                <Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" />
                                <Grid
                                    MinHeight="{DynamicResource InfoBarMinHeight}"
                                    Margin="{StaticResource InfoBarContentRootPadding}"
                                    HorizontalAlignment="Stretch"
                                    ColumnDefinitions="Auto,*,Auto"
                                    RowDefinitions="Auto,Auto">

                                    <Panel Name="StandardIconArea" IsVisible="False">
                                        <Ellipse
                                            Name="IconBackground"
                                            Width="16"
                                            Height="16"
                                            Margin="{StaticResource InfoBarIconMargin}"
                                            VerticalAlignment="Top" />

                                        <ui:FontIcon
                                            Name="StandardIcon"
                                            Margin="{DynamicResource InfoBarIconMargin}"
                                            VerticalAlignment="Top"
                                            FontFamily="{StaticResource SymbolThemeFontFamily}" />
                                    </Panel>

                                    <Viewbox
                                        Name="UserIconBox"
                                        Grid.Column="0"
                                        MaxWidth="{DynamicResource InfoBarIconFontSize}"
                                        MaxHeight="{DynamicResource InfoBarIconFontSize}"
                                        Margin="{DynamicResource InfoBarIconMargin}"
                                        VerticalAlignment="Top"
                                        IsVisible="False">
                                        <ui:IconSourceElement IconSource="{TemplateBinding IconSource}" />
                                    </Viewbox>

                                    <uip:InfoBarPanel
                                        Grid.Column="1"
                                        Margin="{StaticResource InfoBarPanelMargin}"
                                        HorizontalOrientationPadding="{StaticResource InfoBarPanelHorizontalOrientationPadding}"
                                        VerticalOrientationPadding="{StaticResource InfoBarPanelVerticalOrientationPadding}">

                                        <TextBlock
                                            Name="Title"
                                            uip:InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarTitleHorizontalOrientationMargin}"
                                            uip:InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarTitleVerticalOrientationMargin}"
                                            FontSize="{StaticResource InfoBarTitleFontSize}"
                                            FontWeight="{StaticResource InfoBarTitleFontWeight}"
                                            Foreground="{DynamicResource InfoBarTitleForeground}"
                                            Text="{TemplateBinding Title}"
                                            TextWrapping="Wrap" />

                                        <TextBlock
                                            x:Name="Message"
                                            uip:InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarMessageHorizontalOrientationMargin}"
                                            uip:InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarMessageVerticalOrientationMargin}"
                                            FontSize="{StaticResource InfoBarMessageFontSize}"
                                            FontWeight="{StaticResource InfoBarMessageFontWeight}"
                                            Foreground="{DynamicResource InfoBarMessageForeground}"
                                            Text="{TemplateBinding Message}"
                                            TextWrapping="Wrap" />

                                        <ContentPresenter
                                            VerticalAlignment="Top"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Center"
                                            uip:InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarActionHorizontalOrientationMargin}"
                                            uip:InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarActionVerticalOrientationMargin}"
                                            Content="{TemplateBinding ActionButton}" />

                                    </uip:InfoBarPanel>

                                    <ContentPresenter
                                        Name="ContentPresenter"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}" />

                                    <Button
                                        Name="CloseButton"
                                        Grid.Column="2"
                                        VerticalAlignment="Center"
                                        Command="{TemplateBinding CloseButtonCommand}"
                                        CommandParameter="{TemplateBinding CloseButtonCommandParameter}"
                                        Theme="{StaticResource InfoBarCloseButtonStyle}">

                                        <Viewbox
                                            Width="{StaticResource InfoBarCloseButtonGlyphSize}"
                                            Height="{StaticResource InfoBarCloseButtonGlyphSize}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center">
                                            <ui:SymbolIcon Symbol="{StaticResource InfoBarCloseButtonSymbol}" />
                                        </Viewbox>
                                    </Button>
                                </Grid>
                            </Panel>
                        </Border>
                    </LayoutTransformControl>
                </ControlTemplate>
            </Setter>

            <Style Selector="^:informational">
                <Style Selector="^ /template/ Border#ContentRoot">
                    <!--<Setter Property="Background" Value="{DynamicResource InfoBarInformationalSeverityBackgroundBrush}" />-->
                    <Setter Property="Background" Value="{DynamicResource SolidBackgroundFillColorBaseBrush}" />
                </Style>
                <Style Selector="^ /template/ Ellipse#IconBackground">
                    <Setter Property="Fill" Value="{DynamicResource InfoBarInformationalSeverityIconBackground}" />
                </Style>
                <Style Selector="^ /template/ ui|FontIcon#StandardIcon">
                    <Setter Property="Glyph" Value="&#x0069;" />
                    <Setter Property="FontSize" Value="10" />
                    <Setter Property="Foreground" Value="{DynamicResource InfoBarInformationalSeverityIconForeground}" />
                </Style>
            </Style>

            <Style Selector="^:error">
                <Style Selector="^ /template/ Border#ContentRoot">
                    <Setter Property="Background" Value="{DynamicResource InfoBarErrorSeverityBackgroundBrush}" />
                </Style>
                <Style Selector="^ /template/ Ellipse#IconBackground">
                    <Setter Property="Fill" Value="{DynamicResource InfoBarErrorSeverityIconBackground}" />
                </Style>
                <Style Selector="^ /template/ ui|FontIcon#StandardIcon">
                    <Setter Property="Glyph" Value="&#xE10A;" />
                    <Setter Property="FontSize" Value="10" />
                    <Setter Property="Foreground" Value="{DynamicResource InfoBarInformationalSeverityIconForeground}" />
                    <Setter Property="Margin" Value="0,19,14,0" />
                </Style>
            </Style>

            <Style Selector="^:warning">
                <Style Selector="^ /template/ Border#ContentRoot">
                    <Setter Property="Background" Value="{DynamicResource InfoBarWarningSeverityBackgroundBrush}" />
                </Style>
                <Style Selector="^ /template/ Ellipse#IconBackground">
                    <Setter Property="Fill" Value="{DynamicResource InfoBarWarningSeverityIconBackground}" />
                </Style>
                <Style Selector="^ /template/ ui|FontIcon#StandardIcon">
                    <Setter Property="Glyph" Value="&#x0021;" />
                    <Setter Property="FontSize" Value="10" />
                    <Setter Property="Foreground" Value="{DynamicResource InfoBarInformationalSeverityIconForeground}" />
                </Style>
            </Style>

            <Style Selector="^:success">
                <Style Selector="^ /template/ Border#ContentRoot">
                    <Setter Property="Background" Value="{DynamicResource InfoBarSuccessSeverityBackgroundBrush}" />
                </Style>
                <Style Selector="^ /template/ Ellipse#IconBackground">
                    <Setter Property="Fill" Value="{DynamicResource InfoBarSuccessSeverityIconBackground}" />
                </Style>
                <Style Selector="^ /template/ ui|FontIcon#StandardIcon">
                    <Setter Property="Glyph" Value="&#xE10B;" />
                    <Setter Property="FontSize" Value="10" />
                    <Setter Property="Foreground" Value="{DynamicResource InfoBarInformationalSeverityIconForeground}" />
                    <Setter Property="Margin" Value="0,19,14,0" />
                </Style>
            </Style>


            <Style Selector="^:standardIcon">
                <Style Selector="^ /template/ Panel#StandardIconArea">
                    <Setter Property="IsVisible" Value="True" />
                </Style>
                <Style Selector="^ /template/ Viewbox#UserIconBox">
                    <Setter Property="IsVisible" Value="False" />
                </Style>
            </Style>

            <Style Selector="^:icon">
                <Style Selector="^ /template/ Panel#StandardIconArea">
                    <Setter Property="IsVisible" Value="False" />
                </Style>
                <Style Selector="^ /template/ Viewbox#UserIconBox">
                    <Setter Property="IsVisible" Value="True" />
                </Style>
            </Style>

            <!--  CloseButton, visible is default  -->
            <Style Selector="^:closehidden /template/ Button#CloseButton">
                <Setter Property="IsVisible" Value="False" />
            </Style>

            <!--  Visible  -->
            <Style Selector="^:hidden /template/ Border#ContentRoot">
                <Setter Property="IsVisible" Value="False" />
            </Style>


            <Style Selector="^:foregroundset">
                <Style Selector="^ /template/ TextBlock#Title">
                    <Setter Property="Foreground" Value="{TemplateBinding Foreground}" />
                </Style>
                <Style Selector="^ /template/ TextBlock#Message">
                    <Setter Property="Foreground" Value="{TemplateBinding Foreground}" />
                </Style>
            </Style>

            <Style Selector="^">
                <Style.Animations>
                    <Animation
                        Easing="QuadraticEaseIn"
                        FillMode="Forward"
                        Duration="0:0:0.45">
                        <KeyFrame Cue="0%">
                            <Setter Property="Opacity" Value="0" />
                            <Setter Property="TranslateTransform.Y" Value="20" />
                            <Setter Property="ScaleTransform.ScaleX" Value="0.85" />
                            <Setter Property="ScaleTransform.ScaleY" Value="0.85" />
                        </KeyFrame>
                        <KeyFrame Cue="30%">
                            <Setter Property="TranslateTransform.Y" Value="-20" />
                        </KeyFrame>
                        <KeyFrame Cue="100%">
                            <Setter Property="Opacity" Value="1" />
                            <Setter Property="TranslateTransform.Y" Value="0" />
                            <Setter Property="ScaleTransform.ScaleX" Value="1" />
                            <Setter Property="ScaleTransform.ScaleY" Value="1" />
                        </KeyFrame>
                    </Animation>
                </Style.Animations>
            </Style>

            <Style Selector="^[IsClosing=True] /template/ LayoutTransformControl#PART_LayoutTransformControl">
                <Setter Property="RenderTransformOrigin" Value="50%,0%" />
                <Style.Animations>
                    <Animation
                        Easing="QuadraticEaseOut"
                        FillMode="Forward"
                        Duration="0:0:0.75">
                        <KeyFrame Cue="0%">
                            <Setter Property="TranslateTransform.X" Value="0" />
                            <Setter Property="ScaleTransform.ScaleY" Value="1" />
                        </KeyFrame>
                        <KeyFrame Cue="70%">
                            <Setter Property="TranslateTransform.X" Value="800" />
                            <Setter Property="ScaleTransform.ScaleY" Value="1" />
                        </KeyFrame>
                        <KeyFrame Cue="100%">
                            <Setter Property="ScaleTransform.ScaleY" Value="0" />
                            <Setter Property="TranslateTransform.X" Value="800" />
                        </KeyFrame>
                    </Animation>
                </Style.Animations>
            </Style>

            <Style Selector="^[IsClosing=True]">
                <Style.Animations>
                    <Animation
                        Easing="QuadraticEaseOut"
                        FillMode="Forward"
                        Duration="0:0:1.25">
                        <KeyFrame Cue="100%">
                            <Setter Property="IsOpen" Value="False" />
                        </KeyFrame>
                    </Animation>
                </Style.Animations>
            </Style>
        </ControlTheme>
    </Styles.Resources>
</Styles>
